{"$schema": "https://json-schema.org/draft/2020-12/schema", "$id": "https://github.com/Jumpaku/cyamli/raw/v1.0.0/schema/cli.schema.json", "title": "cyamli CLI schema", "description": "CLI schema for cyamli.", "$ref": "#/$defs/program", "$defs": {"program": {"description": "Program is a root command that may have a name and a version.\nIt consists of commands recursively.\n", "allOf": [{"type": "object", "properties": {"name": {"description": "Name of the program.\nThe default value is an empty string.\n", "type": "string"}, "version": {"description": "Version of the program.\nThe default value is an empty string.\n", "type": "string"}}}, {"$ref": "#/$defs/command"}]}, "type": {"description": "Type represents a type of a value that can be assigned to an option or an argument.\nOne of \"string\", \"integer\", \"boolean\", or \"float\" is available.\n", "type": "string", "enum": ["", "string", "integer", "boolean", "float"]}, "command": {"description": "Command represents a root command or a subcommand of the program.\nIt may have options, arguments, and subcommands recursively.\n", "type": "object", "properties": {"description": {"description": "Description of the command.\nThe default value is an empty string.\n", "type": "string"}, "options": {"description": "A collection of options, which is a mapping from option names to options. \nThe default value is an empty object.\nA property name is a name of an option, which must match the regular expression `^(-[a-z][a-z0-9]*)+$` and be unique in options of the command.\n", "type": "object", "additionalProperties": {"$ref": "#/$defs/option"}, "propertyNames": {"pattern": "^(-[a-z][a-z0-9]*)+$"}}, "arguments": {"description": "A list of arguments.\nThe default value is an empty array.\n", "type": "array", "items": {"$ref": "#/$defs/argument"}}, "subcommands": {"description": "A collection of subcommands, which is a mapping from subcommand names to child commands.\nThe default value is an empty object.\nA property name is a name of a subcommand, which must match the regular expression `^[a-z][a-z0-9]*$` and be unique in subcommands of the command.\n", "type": "object", "additionalProperties": {"$ref": "#/$defs/command"}, "propertyNames": {"pattern": "^[a-z][a-z0-9]*$"}}}}, "option": {"description": "Option represents an optional argument in command line arguments.\n", "type": "object", "properties": {"short": {"description": "Short name of the option, which must match the regular expression `^-[a-z]$` and be unique in options of the command which the option belongs to.\nIf short is not specified then short name for this option is not available.\n", "type": "string", "pattern": "(^$)|(^-[a-z]$)"}, "description": {"description": "Description of the option.\nThe default value is an empty string.\n", "type": "string"}, "type": {"description": "Type of the value that is assignable to this option.\nThe default value is \"string\".\n", "$ref": "#/$defs/type"}, "default": {"description": "String value representing the default value of the option.\nIt must be a string that can be parsed as a value of the option type.\nIf not specified, the following values corresponding to the option type.\n- boolean: \"false\"\n- string: \"\"\n- integer: \"0\"\n- float: \"0.0\"\n", "type": "string"}}}, "argument": {"description": "Argument represents a positional required argument in command line arguments.\n", "type": "object", "properties": {"name": {"description": "Name of the argument, which must match the regular expression `^[a-z][a-z0-9]*$` and be unique in arguments of the command which the argument belongs to.\nThis property is required.\n", "type": "string", "pattern": "^[a-z][a-z0-9]*(_[a-z0-9]+)*$"}, "description": {"description": "Description of the argument.\nThe default value is an empty string.\n", "type": "string"}, "type": {"description": "Type of the value that is assignable to the argument.\nThe default value is \"string\".\n", "$ref": "#/$defs/type"}, "variadic": {"description": "Whether the argument is variadic (i.e. can have zero or more values).\nIt can be true only if this argument is the last argument in the arguments of the belonging command.\nThe default value is false.\n", "type": "boolean"}}, "required": ["name"]}}}
